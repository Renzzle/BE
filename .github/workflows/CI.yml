  name: Java CI with Gradle

  on:
    pull_request:
      branches: [ "main"]
    push:
      branches: [ "main", "fix/CD"]

  permissions:
    write-all

  jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        # Setup Redis
        - name: Setup Redis
          uses: shogo82148/actions-setup-redis@v1.30.1
          with:
            redis-version: 6.2.0
            redis-port: 6379
            auto-start: true
            redis-password: 12345678
        # Redis Health Check
        - name: Redis Health Check
          run: redis-cli -h 127.0.0.1 -p 6379 -a 12345678 ping

        - name: Grant execute permission for gradlew
          run: chmod +x ./gradlew

        - name: Cache Gradle packages
          uses: actions/cache@v3
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

        - name: Set Yaml Variables
          uses: microsoft/variable-substitution@v1
          with:
            files: ./src/main/resources/application.yml  # 또는 application-prod.yml
          env:
            spring.datasource.url: jdbc:mysql://${{ secrets.DB_URL }}
            spring.datasource.username: ${{ secrets.DB_USERNAME }}
            spring.datasource.password: ${{ secrets.DB_PASSWORD }}
            spring.mail.username: ${{ secrets.GMAIL_ADDRESS }}
            spring.mail.password: ${{ secrets.GMAIL_PASSWORD }}
            spring.jwt.secret: ${{ secrets.JWT_SECRET_KEY }}
            spring.redis.password: ${{ secrets.REDIS_PASSWORD }}

#        - name: Run Tests with Gradle
#          env:
#            DB_ADDRESS: ${{ secrets.DB_ADDRESS }}
#            DB_USER: ${{ secrets.DB_USER }}
#            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#            REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
#            GMAIL_ADDRESS: ${{ secrets.GMAIL_ADDRESS }}
#            GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
#            JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
#          run: |
#            echo "DB_ADDRESS: $DB_ADDRESS"
#            echo "DB_USER: $DB_USER"
#            echo "DB_PASSWORD: $DB_PASSWORD"
#            echo "REDIS_PASSWORD: $REDIS_PASSWORD"
#            echo "GMAIL_ADDRESS: $GMAIL_ADDRESS"
#            echo "GMAIL_PASSWORD: $GMAIL_PASSWORD"
#            echo "JWT_SECRET_KEY: $JWT_SECRET_KEY"
#            ./gradlew test --stacktrace

        - name: Build and Test with Gradle
#          env:
#            DB_ADDRESS: ${{ secrets.DB_ADDRESS }}
#            DB_USER: ${{ secrets.DB_USER }}
#            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#            REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
#            GMAIL_ADDRESS: ${{ secrets.GMAIL_ADDRESS }}
#            GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
#            JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          run: ./gradlew build --stacktrace

        - name: Test build success
          run: echo "Build completed successfully!"
