name: Java CI/CD with Gradle and Deploy to EC2

on:
  push:
    branches: [ "main", "feature/github-action" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Verify build output
        run: ls -la build/libs

      - name: Test build success
        run: echo "Build completed successfully!"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker environment
        run: |
          sudo apt-get update
          if ! command -v docker &> /dev/null; then
            echo "Docker is not installed. Installing Docker..."
            sudo apt-get install -y docker.io
          else
            echo "Docker is already installed."
          fi

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Remove existing Docker image from Docker Hub
        run: |
          IMAGE_NAME="renzzle/github-action:latest"
          if docker pull $IMAGE_NAME; then
            docker rmi -f $IMAGE_NAME
          fi

      - name: Remove existing local Docker image
        run: |
          if docker images | grep -q 'app'; then
            docker rmi -f app
          fi

      - name: Build Docker image
        run: |
          echo "Checking if .jar file exists in Docker build context..."
          ls -la build/libs
          docker build -t app .

      - name: Tag and Push Docker image
        run: |
          docker tag app renzzle/github-action:latest
          docker push renzzle/github-action:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            set -e
            cd /home/ec2-user/
            
            ALL_CONTAINERS=$(docker ps -q)
            if [ -n "$ALL_CONTAINERS" ]; then
              docker stop $ALL_CONTAINERS
              docker rm $ALL_CONTAINERS
            fi
            
            docker-compose down
            docker-compose pull
            docker-compose up -d

      - name: Remove unused Docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker image prune -f
